package io.micronaut.guides.core;

import io.micronaut.core.io.ResourceLoader;
import io.micronaut.json.JsonMapper;
import io.micronaut.starter.api.TestFramework;
import io.micronaut.starter.options.BuildTool;
import io.micronaut.starter.options.Language;
import io.micronaut.test.extensions.junit5.annotation.MicronautTest;
import jakarta.inject.Inject;
import org.junit.jupiter.api.Test;

import java.io.InputStream;
import java.util.Optional;

import static org.junit.jupiter.api.Assertions.*;

@MicronautTest(startApplication = false)
public class LanguageMacroExclusionTest {

    @Inject
    LanguageMacroExclusion languageMacroExclusion;

    @Inject
    JsonMapper jsonMapper;

    @Inject
    ResourceLoader resourceLoader;

    @Test
    void testExclusionJava() {
        GuidesOption option = new GuidesOption(BuildTool.GRADLE, Language.JAVA, TestFramework.JUNIT);
        Optional<InputStream> inputStreamOptional = resourceLoader.getResourceAsStream("classpath:metadata.json");
        assertTrue(inputStreamOptional.isPresent());
        InputStream inputStream = inputStreamOptional.get();
        Guide guide = assertDoesNotThrow(() -> jsonMapper.readValue(inputStream, Guide.class));
        String str = """
                Create package named `models` where we will put our data beans.
                
                :exclude-for-languages:groovy,kotlin
                The previous `UsersController` controller uses a `User` object to represent the customer. Create the `User` record
                :exclude-for-languages:
                
                :exclude-for-languages:java
                The `UsersController` class uses a `User` object to represent customer. Create the `User` class
                :exclude-for-languages:
                
                source:models/User[app=users]
                callout:serdeable[1]
                <2> ID will be generated by application.
                
                Create package named `auth` where you will check basic authentication credentials.
                """;
        String result = languageMacroExclusion.substitute(str, guide, option);
        String expected = """
                Create package named `models` where we will put our data beans.
                
                The previous `UsersController` controller uses a `User` object to represent the customer. Create the `User` record
                
                
                source:models/User[app=users]
                callout:serdeable[1]
                <2> ID will be generated by application.
                
                Create package named `auth` where you will check basic authentication credentials.
                """;
        assertEquals(expected, result);
    }

    @Test
    void testExclusionGroovy() {
        GuidesOption option = new GuidesOption(BuildTool.GRADLE, Language.KOTLIN, TestFramework.JUNIT);
        Optional<InputStream> inputStreamOptional = resourceLoader.getResourceAsStream("classpath:metadata.json");
        assertTrue(inputStreamOptional.isPresent());
        InputStream inputStream = inputStreamOptional.get();
        Guide guide = assertDoesNotThrow(() -> jsonMapper.readValue(inputStream, Guide.class));
        String str = """
                Create package named `models` where we will put our data beans.
                
                :exclude-for-languages:groovy,kotlin
                The previous `UsersController` controller uses a `User` object to represent the customer. Create the `User` record
                :exclude-for-languages:
                
                :exclude-for-languages:java
                The `UsersController` class uses a `User` object to represent customer. Create the `User` class
                :exclude-for-languages:
                
                source:models/User[app=users]
                callout:serdeable[1]
                <2> ID will be generated by application.
                
                Create package named `auth` where you will check basic authentication credentials.
                """;
        String result = languageMacroExclusion.substitute(str, guide, option);
        String expected = """
                Create package named `models` where we will put our data beans.
                
                
                The `UsersController` class uses a `User` object to represent customer. Create the `User` class
                
                source:models/User[app=users]
                callout:serdeable[1]
                <2> ID will be generated by application.
                
                Create package named `auth` where you will check basic authentication credentials.
                """;
        assertEquals(expected, result);
    }

    @Test
    void testExclusionKotlin() {
        GuidesOption option = new GuidesOption(BuildTool.GRADLE, Language.KOTLIN, TestFramework.JUNIT);
        Optional<InputStream> inputStreamOptional = resourceLoader.getResourceAsStream("classpath:metadata.json");
        assertTrue(inputStreamOptional.isPresent());
        InputStream inputStream = inputStreamOptional.get();
        Guide guide = assertDoesNotThrow(() -> jsonMapper.readValue(inputStream, Guide.class));
        String str = """
                Create package named `models` where we will put our data beans.
                
                :exclude-for-languages:groovy,kotlin
                The previous `UsersController` controller uses a `User` object to represent the customer. Create the `User` record
                :exclude-for-languages:
                
                :exclude-for-languages:java
                The `UsersController` class uses a `User` object to represent customer. Create the `User` class
                :exclude-for-languages:
                
                source:models/User[app=users]
                callout:serdeable[1]
                <2> ID will be generated by application.
                
                Create package named `auth` where you will check basic authentication credentials.
                """;
        String result = languageMacroExclusion.substitute(str, guide, option);
        String expected = """
                Create package named `models` where we will put our data beans.
                
                
                The `UsersController` class uses a `User` object to represent customer. Create the `User` class
                
                source:models/User[app=users]
                callout:serdeable[1]
                <2> ID will be generated by application.
                
                Create package named `auth` where you will check basic authentication credentials.
                """;
        assertEquals(expected, result);
    }


}
