@option discardLogicWhitespace=true
@import io.micronaut.starter.application.Project
@import io.micronaut.starter.build.maven.MavenBuild
@import io.micronaut.starter.build.maven.MavenDependency
@import io.micronaut.starter.options.Language
@args (Language language, Project project, MavenBuild mavenBuild, String parentGroupId, String parentArtifactId, String parentVersion, boolean parentRelativePath, String sourceDirectory, String testSourceDirectory)
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
@if (parentGroupId != null || parentArtifactId != null || parentVersion != null) {
  <parent>
@if (parentGroupId != null) {
    <groupId>@(parentGroupId)</groupId>
}
@if (parentArtifactId != null) {
    <artifactId>@(parentArtifactId)</artifactId>
}
@if (parentVersion != null) {
    <version>@(parentVersion)</version>
}
@if (parentRelativePath) {
    <relativePath/>
}
  </parent>
}
  <artifactId>@mavenBuild.getArtifactId()</artifactId>
@io.micronaut.starter.feature.build.maven.templates.properties.template(mavenBuild.getProperties())
  <build>
@if(sourceDirectory != null) {
   <sourceDirectory>${project.basedir}/src/main/kotlin</sourceDirectory>
}
@if(testSourceDirectory != null) {
   <testSourceDirectory>${project.basedir}/src/test/kotlin</testSourceDirectory>
}
    <plugins>
@mavenBuild.renderPlugins(6)
@if (language == Language.JAVA) {
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <!-- Uncomment to enable incremental compilation -->
          <!-- <useIncrementalCompilation>false</useIncrementalCompilation> -->
          <annotationProcessorPaths @mavenBuild.getAnnotationProcessorCombineAttribute()>
@for (processor : mavenBuild.getAnnotationProcessors()) {
            <path>
              <groupId>@processor.getGroupId()</groupId>
              <artifactId>@processor.getArtifactId()</artifactId>
@if(processor.getVersion() != null) {
              <version>@processor.getVersion()</version>
}
            </path>
}
          </annotationProcessorPaths>
          <compilerArgs>
            <arg>-Amicronaut.processing.group=@project.getPackageName()</arg>
            <arg>-Amicronaut.processing.module=@project.getName()</arg>
          </compilerArgs>
        </configuration>
      </plugin>
}
    </plugins>
  </build>
@if (mavenBuild.hasPomDependency()) {
  <dependencyManagement>
    <dependencies>
@for (MavenDependency f : mavenBuild.getDependencies(true)) {
@io.micronaut.starter.feature.build.maven.templates.dependency.template(f.getGroupId(), f.getArtifactId(), f.getMavenScope().toString(), f.getVersion(), true, f.getExclusions())
}
    </dependencies>
  </dependencyManagement>
}
  <dependencies>
@for (MavenDependency f : mavenBuild.getDependencies(false)) {
@io.micronaut.starter.feature.build.maven.templates.dependency.template(f.getGroupId(), f.getArtifactId(), f.getMavenScope().toString(), f.getVersion(), false, f.getExclusions())
}
  </dependencies>
</project>
