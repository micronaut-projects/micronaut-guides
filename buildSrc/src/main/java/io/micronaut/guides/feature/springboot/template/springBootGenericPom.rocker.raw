@option discardLogicWhitespace=true
@import io.micronaut.starter.application.Project
@import io.micronaut.starter.build.maven.MavenBuild
@import io.micronaut.starter.build.maven.MavenDependency

@args (Project project, MavenBuild mavenBuild, String parentGroupId, String parentArtifactId, String parentVersion, boolean parentRelativePath, String sourceDirectory, String testSourceDirectory)
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
@if (parentGroupId != null || parentArtifactId != null || parentVersion != null) {
  <parent>
@if (parentGroupId != null) {
    <groupId>@(parentGroupId)</groupId>
}
@if (parentArtifactId != null) {
    <artifactId>@(parentArtifactId)</artifactId>
}
@if (parentVersion != null) {
    <version>@(parentVersion)</version>
}
@if (parentRelativePath) {
    <relativePath/>
}
  </parent>
}
  <artifactId>@mavenBuild.getArtifactId()</artifactId>
@io.micronaut.starter.feature.build.maven.templates.properties.template(mavenBuild.getProperties())
  <build>
@if(sourceDirectory != null) {
   <sourceDirectory>${project.basedir}/src/main/kotlin</sourceDirectory>
}
@if(testSourceDirectory != null) {
   <testSourceDirectory>${project.basedir}/src/test/kotlin</testSourceDirectory>
}
    <plugins>
@mavenBuild.renderPlugins(6)
    </plugins>
  </build>
  <dependencies>
@for (MavenDependency f : mavenBuild.getDependencies(false)) {
@io.micronaut.starter.feature.build.maven.templates.dependency.template(f.getGroupId(), f.getArtifactId(), f.getMavenScope().toString(), f.getVersion(), false, f.getExclusions())
}
  </dependencies>
</project>
